@model eRoutingSlip.Models.RoutingSlip
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" />
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

<style>
    .highlighted {
        background-color: white;
        /*padding: 10px 25px 13px 25px;*/
        color: black;
    }
    input[type="button"] {
        border: none;
        outline: none;
    }
</style>
@{
    ViewBag.Title = "Create";
}


<div class="container mt-3">
    <h3>File a Routing Slip</h3>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">

                <!-- first col -->
                <div class="col">
                    <div class="row ml-1">
                        <div class="form-group">
                            @*@Html.LabelFor(model => model.DocumentName, htmlAttributes: new { @class = "control-label" })*@
                            Document Link
                            @Html.ValidationMessageFor(model => model.DocumentName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row ml-1">
                        @Html.EditorFor(model => model.DocumentName, new { htmlAttributes = new { @class = "form-control", @id = "docTitle", autofocus = "" } })
                        <div class="col-2"><input type="button" id="setTitle" value=&#10003 class="btn btn-default" onclick="SetTitle();" /></div>
                    </div>

                    <!--Start copy-->
                    <div class="row mt-3">
                        <div class="form-group">
                            @Html.LabelFor(model => model.ForwardTo, "Recipients:", htmlAttributes: new { @class = "control-label ml-3" })
                            @Html.ValidationMessageFor(model => model.ForwardTo, "", new { @class = "text-danger visible" })
                            @Html.EditorFor(model => model.ForwardTo, new { htmlAttributes = new { @class = "form-control d-none", @id = "forwardTo" } })
                        </div>
                    </div>


                    <div class="row pb-1">
                        <div class="col-7"><input type="text" class="form-control inputfield" id="emailInput" disabled /></div>
                        <div><input id="addEmail" type="button" value="Add" class="btn btn-default" onclick="SendList();" disabled /></div>
                    </div>
                    <div id="ErrorText" class="pt-0 mt-0 pb-5 text-danger font-italic">&nbsp;</div>

                    <!--end copy-->

                    <div class="row mt-lg-5 ml-1">
                        <div class="form-group">
                            <input type="submit" id="createRS" value="Create" class="btn btn-default" disabled />
                            <input type="button" id="clearFields" value="Reset Form" class="btn btn-default]ml-2" onclick="ClearFields();" disabled />
                        </div>
                    </div>
                </div>
                <!-- end -->
                <!-- second col -->


                <div class="col">
                    Route List

                    <div class="row h-75 ">
                        <div class="col-9  h-100 ml-3 mt-3 form-control" id="SendList" style="overflow-y: scroll;">
                        </div>

                        <!-- arrows -->
                        <div class="col-sm-1 h-100 mt-3">
                            <div class="row h-50 mt-4 pt-5"><h1><input id="btnUp" type="button" value="&#8679;" class="border-0 bg-white" onclick="selectUp()"/></h1></div>
                            <div class="row h-50"><h1><input id="btnDown" type="button" value="&#8681;" class="border-0 bg-white" onclick="selectDown()" /></h1></div>
                        </div>
                    </div>

                </div>


            </div>
        </div>
    }


</div>

<script>


    var usrName = "@HttpContext.Current.User.Identity.Name";
    var btnClear = document.getElementById("clearFields");
    var btnAdd = document.getElementById("addEmail");
    var fieldEmail = document.getElementById("emailInput");
    var btnCreate = document.getElementById("createRS");
    var btnTitle = document.getElementById("setTitle");
    var fieldTitle = document.getElementById("docTitle");
    var txtError = $('#ErrorText');


    $("#emailInput").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetSearchValue","RoutingSlip")',
                dataType: "json",
                data: { search: $("#emailInput").val() },
                success: function (data) {
                    response($.map(data, function (item) {
                        return{ label: item.Email, value: item.Email };
                    }));
                },
                error: function (xhr, status, error) {
                    alert("Error")
                }
            });
        }
    });

    $("#emailInput").change(function () {
        $('#ErrorText').html('&nbsp;');
    });
    function highlight(a) {
        $(a).css('color', '#f4f7fc');
        setTimeout(function () { $(a).css('color', 'black'); }, 300);

    }

    function selectUp() {
        highlight(btnUp);
        var seldiv = $('.highlighted').attr("id");
        seldiv = document.getElementById(seldiv);
        seldiv.classList.remove("highlighted");
        var selindex = $("p").index(seldiv);
        $("p").eq(selindex - 1).addClass("highlighted");
    }

    function selectDown() {
        highlight(btnDown);
        var seldiv = $('.highlighted').attr("id");
        seldiv = document.getElementById(seldiv);
        seldiv.classList.remove("highlighted");
        var selindex = $("p").index(seldiv);
        $("p").eq(selindex + 1).addClass("highlighted");
    }

    function SetTitle() {
        fieldTitle.readOnly = true;
        btnTitle.disabled = true;
        btnClear.disabled = false;

        btnAdd.disabled = false;
        fieldEmail.disabled = false;
        fieldEmail.focus();
    }
    var validList = [ "gmail.com" , "lacity.org" ];

    function ValidateEmail(e)
    {
    var splitArray = e.split('@@'); // To Get Array

        if (validList.indexOf(splitArray[1]) >= 0) {
            // Means it has the rejected domains
            return (true);
        }
        else
            return (false);
    }
    function SendList() {
        btnCreate.disabled = false;
        var e = $("#emailInput").val();
        var em;
        var f = $("#forwardTo").val();

        if (e == '') {
            alert('Enter e-mail');
        }
        else {
            var domainTrue = ValidateEmail(e);
            if (domainTrue) {
                if (f.includes(e)) {
                    $('#ErrorText').html('*This e-mail is currently in the list');
                }
                else if (e == usrName) {
                    $('#ErrorText').html('*Unable to add current user to list');
                }
                else {
                    // add in the list
                    em = e + ",";

                    var prevDiv;

                    // determine where to append in div
                    if (($("#SendList").children().length) > 1) {
                        prevDiv = $('.highlighted').attr("id");
                        var n = f.indexOf(prevDiv);
                        var position = n + prevDiv.length + 1;
                        f = f.substr(0, position) + em + f.substr(position);
                        prevDiv = document.getElementById(prevDiv);
                    }

                    else {
                        f = f + em;
                    }
                    // end 

                    // remove .highlighted in p elements
                    $("#SendList>p").removeClass("highlighted");

                    $("#forwardTo").val(f);
                    var newDiv = document.createElement("p");
                    //highlight 
                    newDiv.setAttribute("class", "highlighted p-2 my-1 listedemail");

                    newDiv.setAttribute("id", e);
                    var emailInput;

                    emailInput = document.createTextNode($("#emailInput").val());

                    var removeEntry = document.createElement("BUTTON");
                    //removeEntry.setAttribute("class", "btn btn-default  ml-5 badge-danger badge-pill badge float-right");
                    removeEntry.setAttribute("class", "btn btn-outline-danger ml-5 float-right px-1 py-0");
                    removeEntry.setAttribute("type", "button");
                    removeEntry.setAttribute("id", em);
                    removeEntry.setAttribute("onclick", "Rem(this.id);");
                    var t = document.createTextNode("Remove");
                    removeEntry.appendChild(t);

                    newDiv.appendChild(emailInput); //textnode
                    newDiv.appendChild(removeEntry);

                    //append to div
                    if (($("#SendList").children().length) > 1) {
                        prevDiv.parentNode.insertBefore(newDiv, prevDiv.nextSibling);
                    }

                    else {
                        document.getElementById("SendList").appendChild(newDiv);
                    }

                    document.getElementById("emailInput").value = '';
                }
            }
            else {
                $('#ErrorText').html('*Invalid domain');
            }

        }
        fieldEmail.focus();
    }

    function Rem(a) {

        var x = document.getElementById(a);

        // if removed element is highlighted, highlight previous email entry
        if ((x.parentElement.classList.contains("highlighted")) && $("#SendList").children().length > 1) {
                x.parentNode.previousSibling.setAttribute("class", "highlighted p-2 my-1");


        }

        x.parentNode.remove();
        var f = $("#forwardTo").val();
        f = f.replace(a, "");
        $("#forwardTo").val(f);

        x = document.getElementById("SendList").childElementCount;
        if (x == 0) {
            btnCreate.disabled = true;
        }

        fieldEmail.focus();

    }

    function ClearFields() {
        fieldTitle.readOnly = false;
        $("#docTitle").val('');
        fieldTitle.focus();
        btnClear.disabled = true;
        btnAdd.disabled = true;
        fieldEmail.disabled = true;
        btnCreate.disabled = true;
        btnTitle.disabled = false;
        $("#forwardTo").val('');
        var x = document.getElementById("SendList");
        x.innerHTML = "";
        //x.parentNode.remove();

    }
</script>
