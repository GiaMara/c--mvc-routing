@model eRoutingSlip.Models.RoutingSlip

@{
    ViewBag.Title = "Details";
}
<div class="container mt-3">
    <h3>Routing slip # @Html.DisplayFor(model => model.RoutingSlipID)</h3>

    <div>
        <hr />


        <div class="dl-horizontal">
            <h5 class="font-weight-bold">Initiator</h5>

            <p class="lead ml-3">@Html.DisplayFor(model => model.RequestingEmployee)</p>

            <h5>Date Requested</h5>

            <p class="lead ml-3">@Html.DisplayFor(model => model.DateSubmitted)</p>

            <!-- Open document -->
            <p class="btnRef btn btn-outline-secondary">@Html.ActionLink("Open the Document", "OpenDocument", "Details", new { @id = Model.RoutingSlipID }, null)</p>

            <h5>Route List</h5>
            <p class="lead ml-3">@Html.DisplayFor(model => model.ForwardTo)</p>


        </div>
    </div>
    <hr />
    <p class="btnRef btn btn-outline-success">@Html.ActionLink("Forward", "Forward", "Details", new { @id = Model.RoutingSlipID }, null)</p>
    <p class="btnRef btn btn-outline-info">@Html.ActionLink("Add", "Add", "Details", new { @id = Model.RoutingSlipID }, null)</p>
    <p class="btnRef btn btn-outline-danger">@Html.ActionLink("Reject", "Reject", "Details", new { @id = Model.RoutingSlipID }, null)</p>

    @*<p>


        @Html.ActionLink("Edit", "Edit", new { id = Model.RoutingSlipID }) |
        @Html.ActionLink("Back to List", "Index")
    </p>*@
</div>